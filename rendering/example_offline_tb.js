var example_offline_tb = {"exception": {"type": "<class 'test__offline_tb.SomeException'>", "vars": [{"vars": [{"type": "<type 'str'>", "name": "0", "value": "'exception_string'"}], "type": "<type 'tuple'>", "name": "args", "value": "('exception_string',)"}, {"type": "<type 'str'>", "name": "message", "value": "'exception_string'"}], "value": "exception_string"}, "traceback": [{"function": "setUp", "lines_before": ["    def setUp(self):\n", "        super(OfflineTbTest, self).setUp()\n", "        try:\n", "            f()\n", "        except SomeException:\n"], "lineno": 17, "vars": [{"vars": [{"type": "<type 'bool'>", "name": "_classSetupFailed", "value": "False"}, {"vars": [], "type": "<type 'list'>", "name": "_cleanups", "value": "[]"}, {"type": "<type 'int'>", "name": "_diffThreshold", "value": "65536"}, {"vars": [{"vars": [{"vars": null, "type": "<type 'dict'>", "name": "_default", "value": "{'loggingConfig': None, 'stream': <open file '<stderr>', mode 'w' at 0x100253270>, 'logStream': <open file '<stderr>', mode 'w' at 0x100253270>, 'parser': None, 'testNames': [], 'plugins': <nose.plugins.manager.NoPlugins object at 0x101348750>, 'exclude': None, 'stopOnError': False, 'addPaths': True, 'ignoreFiles': [<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], 'workingDir': '/Users/rotemy/workspace/src/work/offlinetb', 'env': {'DESTINATION': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/iTerm 1.0.0.20120108 Update 1', 'LC_CTYPE': '', 'LOGNAME': 'rotemy', 'USER': 'rotemy', 'PATH': '/Users/rotemy/.virtualenvs/infi/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin', 'HOME': '/Users/rotemy', 'DISPLAY': '/tmp/launch-N9QJo8/org.x:0', 'TERM_PROGRAM': 'iTerm.app', 'TERM': 'xterm-256color', 'SHELL': '/usr/bin/zsh', 'COLORFGBG': '7;0', 'SHLVL': '1', 'MACOSX_DEPLOYMENT_TARGET': '10.4', 'SECURITYSESSIONID': '186a5', 'RPROMPT': '%{\\x1b[01;37m%}(venv:${VIRTUAL_ENV:t})%{\\x1b[00m%}', 'ITERM_SESSION_ID': 'w0t1p0', 'VIRTUAL_ENV_DISABLE_PROMPT': '1', '_': '/Users/rotemy/.virtualenvs/infi/bin/nosetests', 'GREP_COLOR': '1;32', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'WORKON_HOME': '/Users/rotemy/.virtualenvs', 'WORDCHARS': '*?_-.[]~=&;!#%^(){}<>', 'SSH_AUTH_SOCK': '/tmp/launch-KkGGQU/Listeners', 'VIRTUAL_ENV': '/Users/rotemy/.virtualenvs/infi', 'Apple_PubSub_Socket_Render': '/tmp/launch-7PxvwY/Render', 'ITERM_PROFILE': 'Default', 'TMPDIR': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/', 'VIRTUALENVWRAPPER_LOG_DIR': '/Users/rotemy/.virtualenvs', 'VIRTUALENVWRAPPER_PROJECT_FILENAME': '.project', 'GREP_OPTIONS': '--color=auto', 'VIRTUALENVWRAPPER_HOOK_DIR': '/Users/rotemy/.virtualenvs', 'OLDPWD': '/Users/rotemy/src/work/infinitest.git', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'PWD': '/Users/rotemy/src/work/offlinetb', 'GIT_EDITOR': '/usr/bin/vim', 'PAGER': 'less -R', 'COMMAND_MODE': 'unix2003'}, 'include': None, 'traverseNamespace': False, 'runOnInit': True, 'args': (), 'ignoreFilesDefaultStrings': ['^\\\\.', '^_', '^setup\\\\.py$'], 'configSection': 'nosetests', 'parserClass': <class optparse.OptionParser at 0x1011eb8d8>, 'testMatchPat': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'firstPackageWins': False, 'worker': False, 'getTestCaseNamesCompat': False, 'py3where': (), 'verbosity': 1, 'includeExe': False, 'debugLog': None, 'testMatch': <_sre.SRE_Pattern object at 0x1004830f0>, 'srcDirs': ('lib', 'src'), 'debug': None, 'where': (), 'options': <nose.config.NoOptions object at 0x101348710>}"}, {"vars": null, "type": "<type 'dict'>", "name": "_orig", "value": "{'loggingConfig': None, 'stream': <open file '<stderr>', mode 'w' at 0x100253270>, 'logStream': <open file '<stderr>', mode 'w' at 0x100253270>, 'parser': None, 'testNames': [], 'plugins': <nose.plugins.manager.DefaultPluginManager object at 0x101348690>, 'exclude': None, 'stopOnError': False, 'addPaths': True, 'ignoreFiles': [<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], 'workingDir': '/Users/rotemy/workspace/src/work/offlinetb', 'env': {'DESTINATION': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/iTerm 1.0.0.20120108 Update 1', 'LC_CTYPE': '', 'LOGNAME': 'rotemy', 'USER': 'rotemy', 'PATH': '/Users/rotemy/.virtualenvs/infi/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin', 'HOME': '/Users/rotemy', 'DISPLAY': '/tmp/launch-N9QJo8/org.x:0', 'TERM_PROGRAM': 'iTerm.app', 'TERM': 'xterm-256color', 'SHELL': '/usr/bin/zsh', 'COLORFGBG': '7;0', 'SHLVL': '1', 'MACOSX_DEPLOYMENT_TARGET': '10.4', 'SECURITYSESSIONID': '186a5', 'RPROMPT': '%{\\x1b[01;37m%}(venv:${VIRTUAL_ENV:t})%{\\x1b[00m%}', 'ITERM_SESSION_ID': 'w0t1p0', 'VIRTUAL_ENV_DISABLE_PROMPT': '1', '_': '/Users/rotemy/.virtualenvs/infi/bin/nosetests', 'GREP_COLOR': '1;32', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'WORKON_HOME': '/Users/rotemy/.virtualenvs', 'WORDCHARS': '*?_-.[]~=&;!#%^(){}<>', 'SSH_AUTH_SOCK': '/tmp/launch-KkGGQU/Listeners', 'VIRTUAL_ENV': '/Users/rotemy/.virtualenvs/infi', 'Apple_PubSub_Socket_Render': '/tmp/launch-7PxvwY/Render', 'ITERM_PROFILE': 'Default', 'TMPDIR': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/', 'VIRTUALENVWRAPPER_LOG_DIR': '/Users/rotemy/.virtualenvs', 'VIRTUALENVWRAPPER_PROJECT_FILENAME': '.project', 'GREP_OPTIONS': '--color=auto', 'VIRTUALENVWRAPPER_HOOK_DIR': '/Users/rotemy/.virtualenvs', 'OLDPWD': '/Users/rotemy/src/work/infinitest.git', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'PWD': '/Users/rotemy/src/work/offlinetb', 'GIT_EDITOR': '/usr/bin/vim', 'PAGER': 'less -R', 'COMMAND_MODE': 'unix2003'}, '_default': {'loggingConfig': None, 'stream': <open file '<stderr>', mode 'w' at 0x100253270>, 'logStream': <open file '<stderr>', mode 'w' at 0x100253270>, 'parser': None, 'testNames': [], 'plugins': <nose.plugins.manager.NoPlugins object at 0x101348750>, 'exclude': None, 'stopOnError': False, 'addPaths': True, 'ignoreFiles': [<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], 'workingDir': '/Users/rotemy/workspace/src/work/offlinetb', 'env': {'DESTINATION': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/iTerm 1.0.0.20120108 Update 1', 'LC_CTYPE': '', 'LOGNAME': 'rotemy', 'USER': 'rotemy', 'PATH': '/Users/rotemy/.virtualenvs/infi/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin', 'HOME': '/Users/rotemy', 'DISPLAY': '/tmp/launch-N9QJo8/org.x:0', 'TERM_PROGRAM': 'iTerm.app', 'TERM': 'xterm-256color', 'SHELL': '/usr/bin/zsh', 'COLORFGBG': '7;0', 'SHLVL': '1', 'MACOSX_DEPLOYMENT_TARGET': '10.4', 'SECURITYSESSIONID': '186a5', 'RPROMPT': '%{\\x1b[01;37m%}(venv:${VIRTUAL_ENV:t})%{\\x1b[00m%}', 'ITERM_SESSION_ID': 'w0t1p0', 'VIRTUAL_ENV_DISABLE_PROMPT': '1', '_': '/Users/rotemy/.virtualenvs/infi/bin/nosetests', 'GREP_COLOR': '1;32', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'WORKON_HOME': '/Users/rotemy/.virtualenvs', 'WORDCHARS': '*?_-.[]~=&;!#%^(){}<>', 'SSH_AUTH_SOCK': '/tmp/launch-KkGGQU/Listeners', 'VIRTUAL_ENV': '/Users/rotemy/.virtualenvs/infi', 'Apple_PubSub_Socket_Render': '/tmp/launch-7PxvwY/Render', 'ITERM_PROFILE': 'Default', 'TMPDIR': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/', 'VIRTUALENVWRAPPER_LOG_DIR': '/Users/rotemy/.virtualenvs', 'VIRTUALENVWRAPPER_PROJECT_FILENAME': '.project', 'GREP_OPTIONS': '--color=auto', 'VIRTUALENVWRAPPER_HOOK_DIR': '/Users/rotemy/.virtualenvs', 'OLDPWD': '/Users/rotemy/src/work/infinitest.git', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'PWD': '/Users/rotemy/src/work/offlinetb', 'GIT_EDITOR': '/usr/bin/vim', 'PAGER': 'less -R', 'COMMAND_MODE': 'unix2003'}, 'include': None, 'traverseNamespace': False, 'runOnInit': True, 'args': (), 'ignoreFilesDefaultStrings': ['^\\\\.', '^_', '^setup\\\\.py$'], 'configSection': 'nosetests', 'parserClass': <class optparse.OptionParser at 0x1011eb8d8>, 'testMatchPat': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'firstPackageWins': False, 'worker': False, 'getTestCaseNamesCompat': False, 'py3where': (), 'verbosity': 1, 'includeExe': False, 'debugLog': None, 'testMatch': <_sre.SRE_Pattern object at 0x1004830f0>, 'srcDirs': ('lib', 'src'), 'debug': None, 'where': (), 'options': <nose.config.NoOptions object at 0x101348710>}, 'include': None, 'traverseNamespace': False, 'runOnInit': True, 'files': [], 'args': (), 'ignoreFilesDefaultStrings': ['^\\\\.', '^_', '^setup\\\\.py$'], 'configSection': 'nosetests', 'parserClass': <class optparse.OptionParser at 0x1011eb8d8>, 'testMatchPat': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'firstPackageWins': False, 'worker': False, 'getTestCaseNamesCompat': False, 'py3where': (), 'verbosity': 1, 'includeExe': False, 'debugLog': None, 'testMatch': <_sre.SRE_Pattern object at 0x1004830f0>, 'srcDirs': ('lib', 'src'), 'debug': None, 'where': (), 'options': <nose.config.NoOptions object at 0x101348710>}"}, {"type": "<type 'bool'>", "name": "addPaths", "value": "True"}, {"vars": null, "type": "<type 'tuple'>", "name": "args", "value": "()"}, {"type": "<type 'str'>", "name": "configSection", "value": "'nosetests'"}, {"vars": null, "type": "<type 'NoneType'>", "name": "debug", "value": "None"}, {"vars": null, "type": "<type 'NoneType'>", "name": "debugLog", "value": "None"}, {"vars": null, "type": "<type 'instance'>", "name": "env", "value": "{'DESTINATION': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/iTerm 1.0.0.20120108 Update 1', 'LC_CTYPE': '', 'LOGNAME': 'rotemy', 'USER': 'rotemy', 'PATH': '/Users/rotemy/.virtualenvs/infi/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin', 'HOME': '/Users/rotemy', 'DISPLAY': '/tmp/launch-N9QJo8/org.x:0', 'TERM_PROGRAM': 'iTerm.app', 'TERM': 'xterm-256color', 'SHELL': '/usr/bin/zsh', 'COLORFGBG': '7;0', 'SHLVL': '1', 'MACOSX_DEPLOYMENT_TARGET': '10.4', 'SECURITYSESSIONID': '186a5', 'RPROMPT': '%{\\x1b[01;37m%}(venv:${VIRTUAL_ENV:t})%{\\x1b[00m%}', 'ITERM_SESSION_ID': 'w0t1p0', 'VIRTUAL_ENV_DISABLE_PROMPT': '1', '_': '/Users/rotemy/.virtualenvs/infi/bin/nosetests', 'GREP_COLOR': '1;32', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'WORKON_HOME': '/Users/rotemy/.virtualenvs', 'WORDCHARS': '*?_-.[]~=&;!#%^(){}<>', 'SSH_AUTH_SOCK': '/tmp/launch-KkGGQU/Listeners', 'VIRTUAL_ENV': '/Users/rotemy/.virtualenvs/infi', 'Apple_PubSub_Socket_Render': '/tmp/launch-7PxvwY/Render', 'ITERM_PROFILE': 'Default', 'TMPDIR': '/var/folders/pd/74k4p8t945z7_r6z1fd_s_hm0000gn/T/', 'VIRTUALENVWRAPPER_LOG_DIR': '/Users/rotemy/.virtualenvs', 'VIRTUALENVWRAPPER_PROJECT_FILENAME': '.project', 'GREP_OPTIONS': '--color=auto', 'VIRTUALENVWRAPPER_HOOK_DIR': '/Users/rotemy/.virtualenvs', 'OLDPWD': '/Users/rotemy/src/work/infinitest.git', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'PWD': '/Users/rotemy/src/work/offlinetb', 'GIT_EDITOR': '/usr/bin/vim', 'PAGER': 'less -R', 'COMMAND_MODE': 'unix2003'}"}, {"vars": null, "type": "<type 'NoneType'>", "name": "exclude", "value": "None"}, {"vars": null, "type": "<type 'list'>", "name": "files", "value": "[]"}, {"type": "<type 'bool'>", "name": "firstPackageWins", "value": "False"}, {"type": "<type 'bool'>", "name": "getTestCaseNamesCompat", "value": "False"}, {"vars": null, "type": "<type 'list'>", "name": "ignoreFiles", "value": "[<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>]"}, {"vars": null, "type": "<type 'list'>", "name": "ignoreFilesDefaultStrings", "value": "['^\\\\.', '^_', '^setup\\\\.py$']"}, {"vars": null, "type": "<type 'NoneType'>", "name": "include", "value": "None"}, {"type": "<type 'bool'>", "name": "includeExe", "value": "False"}, {"vars": null, "type": "<type 'file'>", "name": "logStream", "value": "<open file '<stderr>', mode 'w' at 0x100253270>"}, {"vars": null, "type": "<type 'NoneType'>", "name": "loggingConfig", "value": "None"}, {"vars": null, "type": "<type 'instance'>", "name": "options", "value": "<Values at 0x101b30cf8: {'ipdbFailures': False, 'doctest_tests': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'enable_plugin_infi': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'enable_plugin_id': None, 'testNames': None, 'exclude': [], 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'stopOnError': True, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'enable_plugin_allmodules': None, 'failed': False, 'version': False, 'eval_attr': None, 'includeExe': False, 'ipdbErrors': False, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'multiprocess_timeout': 10, 'doctest_result_var': None, 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'logcapture_datefmt': None, 'xunit_file': 'nosetests.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'enable_plugin_snort': None, 'py3where': None, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'noDeprecated': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': None, 'testMatch': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'cover_html': None, 'debug': None, 'where': ['tests'], 'cover_tests': None, 'profile_restrict': None}>"}, {"vars": null, "type": "<type 'instance'>", "name": "parser", "value": "<optparse.OptionParser instance at 0x10133f8c0>"}, {"vars": null, "type": "<class 'nose.plugins.manager.DefaultPluginManager'>", "name": "plugins", "value": "<nose.plugins.manager.DefaultPluginManager object at 0x101348690>"}, {"vars": null, "type": "<type 'tuple'>", "name": "py3where", "value": "()"}, {"type": "<type 'bool'>", "name": "runOnInit", "value": "True"}, {"vars": null, "type": "<type 'tuple'>", "name": "srcDirs", "value": "('lib', 'src')"}, {"type": "<type 'bool'>", "name": "stopOnError", "value": "True"}, {"vars": null, "type": "<type 'file'>", "name": "stream", "value": "<open file '<stderr>', mode 'w' at 0x100253270>"}, {"vars": null, "type": "<type '_sre.SRE_Pattern'>", "name": "testMatch", "value": "<_sre.SRE_Pattern object at 0x101a9a9f0>"}, {"type": "<type 'str'>", "name": "testMatchPat", "value": "'(?:^|[\\\\b_\\\\./-])[Tt]est'"}, {"vars": null, "type": "<type 'list'>", "name": "testNames", "value": "[]"}, {"type": "<type 'bool'>", "name": "traverseNamespace", "value": "False"}, {"type": "<type 'int'>", "name": "verbosity", "value": "1"}, {"vars": null, "type": "<type 'tuple'>", "name": "where", "value": "()"}, {"type": "<type 'bool'>", "name": "worker", "value": "False"}, {"type": "<type 'str'>", "name": "workingDir", "value": "'/Users/rotemy/workspace/src/work/offlinetb/tests'"}], "type": "<class 'nose.config.Config'>", "name": "config", "value": "Config(addPaths=True, args=(), configSection='nosetests', debug=None, debugLog=None, env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], ignoreFilesDefaultStrings=['^\\\\.', '^_', '^setup\\\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x100253270>, loggingConfig=None, options=<Values at 0x101b30cf8: {'ipdbFailures': False, 'doctest_tests': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'enable_plugin_infi': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'enable_plugin_id': None, 'testNames': None, 'exclude': [], 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'stopOnError': True, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'enable_plugin_allmodules': None, 'failed': False, 'version': False, 'eval_attr': None, 'includeExe': False, 'ipdbErrors': False, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'multiprocess_timeout': 10, 'doctest_result_var': None, 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'logcapture_datefmt': None, 'xunit_file': 'nosetests.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'enable_plugin_snort': None, 'py3where': None, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'noDeprecated': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': None, 'testMatch': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'cover_html': None, 'debug': None, 'where': ['tests'], 'cover_tests': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x10133f8c0>, parserClass=<class optparse.OptionParser at 0x1011eb8d8>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x101348690>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=True, stream=<open file '<stderr>', mode 'w' at 0x100253270>, testMatch=<_sre.SRE_Pattern object at 0x101a9a9f0>, testMatchPat='(?:^|[\\\\b_\\\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/Users/rotemy/workspace/src/work/offlinetb/tests')"}, {"vars": [], "type": "<type 'list'>", "name": "errors", "value": "[]"}, {"vars": [], "type": "<type 'list'>", "name": "failures", "value": "[]"}, {"vars": [{"vars": null, "type": "<type 'list'>", "name": "_plugins", "value": "[<nose.plugins.deprecated.Deprecated object at 0x101348d10>, <nose.plugins.skip.Skip object at 0x1015bb110>, <nose.plugins.capture.Capture object at 0x1013488d0>, <nose.plugins.logcapture.LogCapture object at 0x101348910>, <infi.unittest.nose_plugin.NosePlugin object at 0x1015f6990>]"}, {"vars": null, "type": "<type 'dict'>", "name": "_proxies", "value": "{'beforeDirectory': <nose.plugins.manager.PluginProxy object at 0x101b34410>, 'loadTestsFromNames': <nose.plugins.manager.PluginProxy object at 0x101b34050>, 'stopTest': <nose.plugins.manager.PluginProxy object at 0x101b4b2d0>, 'stopContext': <nose.plugins.manager.PluginProxy object at 0x101b4b350>, 'makeTest': <nose.plugins.manager.PluginProxy object at 0x101b3ac50>, 'wantClass': <nose.plugins.manager.PluginProxy object at 0x101b3abd0>, 'prepareTestResult': <nose.plugins.manager.PluginProxy object at 0x101b342d0>, 'prepareTest': <nose.plugins.manager.PluginProxy object at 0x101b34210>, 'beforeImport': <nose.plugins.manager.PluginProxy object at 0x101b34610>, 'wantModule': <nose.plugins.manager.PluginProxy object at 0x101b34bd0>, 'beforeTest': <nose.plugins.manager.PluginProxy object at 0x101b4b150>, 'prepareTestCase': <nose.plugins.manager.PluginProxy object at 0x101b4b190>, 'wantFile': <nose.plugins.manager.PluginProxy object at 0x101b34550>, 'startContext': <nose.plugins.manager.PluginProxy object at 0x101b45ed0>, 'prepareTestRunner': <nose.plugins.manager.PluginProxy object at 0x101b341d0>, 'setOutputStream': <nose.plugins.manager.PluginProxy object at 0x101b34250>, 'begin': <nose.plugins.manager.PluginProxy object at 0x101b2acd0>, 'addSuccess': <nose.plugins.manager.PluginProxy object at 0x101b4b290>, 'loadTestsFromTestCase': <nose.plugins.manager.PluginProxy object at 0x101b3ac90>, 'afterImport': <nose.plugins.manager.PluginProxy object at 0x101b34650>, 'beforeContext': <nose.plugins.manager.PluginProxy object at 0x101b34590>, 'prepareTestLoader': <nose.plugins.manager.PluginProxy object at 0x101b2afd0>, 'loadTestsFromName': <nose.plugins.manager.PluginProxy object at 0x101b340d0>, 'addOptions': <nose.plugins.manager.PluginProxy object at 0x101348810>, 'wantFunction': <nose.plugins.manager.PluginProxy object at 0x101b3ac10>, 'startTest': <nose.plugins.manager.PluginProxy object at 0x101b4b250>, 'afterTest': <nose.plugins.manager.PluginProxy object at 0x101b4b310>, 'loadTestsFromModule': <nose.plugins.manager.PluginProxy object at 0x101b2ad10>}"}, {"vars": null, "type": "<class 'nose.config.Config'>", "name": "config", "value": "Config(addPaths=True, args=(), configSection='nosetests', debug=None, debugLog=None, env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], ignoreFilesDefaultStrings=['^\\\\.', '^_', '^setup\\\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x100253270>, loggingConfig=None, options=<Values at 0x101b30cf8: {'ipdbFailures': False, 'doctest_tests': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'enable_plugin_infi': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'enable_plugin_id': None, 'testNames': None, 'exclude': [], 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'stopOnError': True, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'enable_plugin_allmodules': None, 'failed': False, 'version': False, 'eval_attr': None, 'includeExe': False, 'ipdbErrors': False, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'multiprocess_timeout': 10, 'doctest_result_var': None, 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'logcapture_datefmt': None, 'xunit_file': 'nosetests.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'enable_plugin_snort': None, 'py3where': None, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'noDeprecated': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': None, 'testMatch': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'cover_html': None, 'debug': None, 'where': ['tests'], 'cover_tests': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x10133f8c0>, parserClass=<class optparse.OptionParser at 0x1011eb8d8>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x101348690>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=True, stream=<open file '<stderr>', mode 'w' at 0x100253270>, testMatch=<_sre.SRE_Pattern object at 0x101a9a9f0>, testMatchPat='(?:^|[\\\\b_\\\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/Users/rotemy/workspace/src/work/offlinetb/tests')"}, {"vars": null, "type": "<type 'tuple'>", "name": "entry_points", "value": "(('nose.plugins.0.10', None), ('nose.plugins', <class nose.plugins.manager.ZeroNinePlugin at 0x1012bf6d0>))"}, {"vars": null, "type": "<type 'list'>", "name": "plugins", "value": "[<nose.plugins.deprecated.Deprecated object at 0x101348d10>, <nose.plugins.skip.Skip object at 0x1015bb110>, <nose.plugins.capture.Capture object at 0x1013488d0>, <nose.plugins.logcapture.LogCapture object at 0x101348910>, <infi.unittest.nose_plugin.NosePlugin object at 0x1015f6990>]"}], "type": "<class 'nose.plugins.manager.DefaultPluginManager'>", "name": "plugins", "value": "<nose.plugins.manager.DefaultPluginManager object at 0x101348690>"}, {"vars": [{"type": "<type 'bool'>", "name": "_mirrorOutput", "value": "False"}, {"type": "<type 'bool'>", "name": "_moduleSetUpFailed", "value": "False"}, {"vars": null, "type": "<type 'file'>", "name": "_original_stderr", "value": "<open file '<stderr>', mode 'w' at 0x100253270>"}, {"vars": null, "type": "<type 'instance'>", "name": "_original_stdout", "value": "<StringIO.StringIO instance at 0x101b31ef0>"}, {"vars": null, "type": "<type 'NoneType'>", "name": "_previousTestClass", "value": "None"}, {"vars": null, "type": "<type 'NoneType'>", "name": "_stderr_buffer", "value": "None"}, {"vars": null, "type": "<type 'NoneType'>", "name": "_stdout_buffer", "value": "None"}, {"type": "<type 'bool'>", "name": "_testRunEntered", "value": "False"}, {"type": "<type 'bool'>", "name": "buffer", "value": "False"}, {"vars": null, "type": "<class 'nose.config.Config'>", "name": "config", "value": "Config(addPaths=True, args=(), configSection='nosetests', debug=None, debugLog=None, env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], ignoreFilesDefaultStrings=['^\\\\.', '^_', '^setup\\\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x100253270>, loggingConfig=None, options=<Values at 0x101b30cf8: {'ipdbFailures': False, 'doctest_tests': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'enable_plugin_infi': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'enable_plugin_id': None, 'testNames': None, 'exclude': [], 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'stopOnError': True, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'enable_plugin_allmodules': None, 'failed': False, 'version': False, 'eval_attr': None, 'includeExe': False, 'ipdbErrors': False, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'multiprocess_timeout': 10, 'doctest_result_var': None, 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'logcapture_datefmt': None, 'xunit_file': 'nosetests.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'enable_plugin_snort': None, 'py3where': None, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'noDeprecated': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': None, 'testMatch': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'cover_html': None, 'debug': None, 'where': ['tests'], 'cover_tests': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x10133f8c0>, parserClass=<class optparse.OptionParser at 0x1011eb8d8>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x101348690>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=True, stream=<open file '<stderr>', mode 'w' at 0x100253270>, testMatch=<_sre.SRE_Pattern object at 0x101a9a9f0>, testMatchPat='(?:^|[\\\\b_\\\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/Users/rotemy/workspace/src/work/offlinetb/tests')"}, {"vars": null, "type": "<type 'list'>", "name": "deprecated", "value": "[]"}, {"type": "<type 'int'>", "name": "descriptions", "value": "1"}, {"type": "<type 'bool'>", "name": "dots", "value": "True"}, {"vars": null, "type": "<type 'dict'>", "name": "errorClasses", "value": "{<class 'nose.plugins.deprecated.DeprecatedTest'>: ([], 'DEPRECATED', False), <class 'unittest.case.SkipTest'>: ([], 'SKIP', False)}"}, {"vars": null, "type": "<type 'list'>", "name": "errors", "value": "[]"}, {"vars": null, "type": "<type 'list'>", "name": "expectedFailures", "value": "[]"}, {"type": "<type 'bool'>", "name": "failfast", "value": "False"}, {"vars": null, "type": "<type 'list'>", "name": "failures", "value": "[]"}, {"type": "<type 'str'>", "name": "separator1", "value": "'======================================================================'"}, {"type": "<type 'str'>", "name": "separator2", "value": "'----------------------------------------------------------------------'"}, {"type": "<type 'bool'>", "name": "shouldStop", "value": "False"}, {"type": "<type 'bool'>", "name": "showAll", "value": "False"}, {"vars": null, "type": "<type 'list'>", "name": "skipped", "value": "[]"}, {"vars": null, "type": "<class 'unittest.runner._WritelnDecorator'>", "name": "stream", "value": "<unittest.runner._WritelnDecorator object at 0x101b34190>"}, {"type": "<type 'int'>", "name": "testsRun", "value": "14"}, {"vars": null, "type": "<type 'list'>", "name": "unexpectedSuccesses", "value": "[]"}], "type": "<class 'nose.result.TextTestResult'>", "name": "result", "value": "<nose.result.TextTestResult run=14 errors=0 failures=0>"}, {"type": "<type 'bool'>", "name": "shouldStop", "value": "False"}, {"vars": [{"type": "<type 'bool'>", "name": "_classSetupFailed", "value": "False"}, {"vars": null, "type": "<type 'list'>", "name": "_cleanups", "value": "[]"}, {"type": "<type 'int'>", "name": "_diffThreshold", "value": "65536"}, {"vars": null, "type": "<type 'NoneType'>", "name": "_resultForDoCleanups", "value": "None"}, {"type": "<type 'str'>", "name": "_testMethodDoc", "value": "'Run the test. Plugins may alter the test by returning a\\n        value from prepareTestCase. The value must be callable and\\n        must accept one argument, the result instance.\\n        '"}, {"type": "<type 'str'>", "name": "_testMethodName", "value": "'runTest'"}, {"vars": null, "type": "<type 'dict'>", "name": "_type_equality_funcs", "value": "{<type 'dict'>: <bound method Test.assertDictEqual of Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)>, <type 'tuple'>: <bound method Test.assertTupleEqual of Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)>, <type 'unicode'>: <bound method Test.assertMultiLineEqual of Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)>, <type 'frozenset'>: <bound method Test.assertSetEqual of Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)>, <type 'set'>: <bound method Test.assertSetEqual of Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)>, <type 'list'>: <bound method Test.assertListEqual of Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)>}"}, {"vars": null, "type": "<type 'NoneType'>", "name": "capturedOutput", "value": "None"}, {"vars": null, "type": "<class 'nose.config.Config'>", "name": "config", "value": "Config(addPaths=True, args=(), configSection='nosetests', debug=None, debugLog=None, env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[<_sre.SRE_Pattern object at 0x100557d50>, <_sre.SRE_Pattern object at 0x10133d810>, <_sre.SRE_Pattern object at 0x101334300>], ignoreFilesDefaultStrings=['^\\\\.', '^_', '^setup\\\\.py$'], include=None, includeExe=False, logStream=<open file '<stderr>', mode 'w' at 0x100253270>, loggingConfig=None, options=<Values at 0x101b30cf8: {'ipdbFailures': False, 'doctest_tests': None, 'multiprocess_restartworker': False, 'loggingConfig': None, 'doctestExtension': None, 'enable_plugin_infi': None, 'enable_plugin_xunit': None, 'logcapture_clear': False, 'enable_plugin_id': None, 'testNames': None, 'exclude': [], 'ignoreFiles': [], 'logcapture': True, 'addPaths': True, 'capture': True, 'stopOnError': True, 'noSkip': False, 'enable_plugin_isolation': None, 'logcapture_filters': None, 'collect_only': None, 'enable_plugin_allmodules': None, 'failed': False, 'version': False, 'eval_attr': None, 'includeExe': False, 'ipdbErrors': False, 'include': [], 'enable_plugin_profile': None, 'debugErrors': False, 'files': None, 'multiprocess_timeout': 10, 'doctest_result_var': None, 'traverseNamespace': False, 'firstPackageWins': False, 'cover_html_dir': 'cover', 'logcapture_datefmt': None, 'xunit_file': 'nosetests.xml', 'showPlugins': False, 'cover_erase': None, 'multiprocess_workers': 0, 'enable_plugin_snort': None, 'py3where': None, 'testIdFile': '.noseids', 'enable_plugin_coverage': None, 'attr': None, 'profile_sort': 'cumulative', 'doctestFixtures': None, 'cover_packages': None, 'verbosity': 1, 'enable_plugin_doctest': None, 'profile_stats_file': None, 'cover_inclusive': None, 'noDeprecated': False, 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'debugFailures': False, 'detailedErrors': None, 'debugLog': None, 'testMatch': '(?:^|[\\\\b_\\\\./-])[Tt]est', 'cover_html': None, 'debug': None, 'where': ['tests'], 'cover_tests': None, 'profile_restrict': None}>, parser=<optparse.OptionParser instance at 0x10133f8c0>, parserClass=<class optparse.OptionParser at 0x1011eb8d8>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x101348690>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=True, stream=<open file '<stderr>', mode 'w' at 0x100253270>, testMatch=<_sre.SRE_Pattern object at 0x101a9a9f0>, testMatchPat='(?:^|[\\\\b_\\\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/Users/rotemy/workspace/src/work/offlinetb/tests')"}, {"type": "<type 'bool'>", "name": "longMessage", "value": "False"}, {"type": "<type 'int'>", "name": "maxDiff", "value": "640"}, {"vars": null, "type": "<type 'NoneType'>", "name": "passed", "value": "None"}, {"vars": null, "type": "<class 'nose.plugins.manager.DefaultPluginManager'>", "name": "plugins", "value": "<nose.plugins.manager.DefaultPluginManager object at 0x101348690>"}, {"vars": null, "type": "<class 'nose.proxy.ResultProxyFactory'>", "name": "resultProxy", "value": "<nose.proxy.ResultProxyFactory object at 0x101b2af90>"}, {"vars": null, "type": "<type 'NoneType'>", "name": "tbinfo", "value": "None"}, {"vars": null, "type": "<class 'test__offline_tb.OfflineTbTest'>", "name": "test", "value": "<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>"}], "type": "<class 'nose.case.Test'>", "name": "test", "value": "Test(<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>)"}, {"type": "<type 'int'>", "name": "testsRun", "value": "14"}], "type": "<class 'nose.proxy.ResultProxy'>", "name": "_resultForDoCleanups", "value": "<nose.result.TextTestResult run=14 errors=0 failures=0>"}, {"vars": [], "type": "<type 'NoneType'>", "name": "_testMethodDoc", "value": "None"}, {"type": "<type 'str'>", "name": "_testMethodName", "value": "'test__ungettable_attributes'"}, {"vars": [{"type": "<type 'instancemethod'>", "name": "<type 'dict'>", "value": "<bound method OfflineTbTest.assertDictEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>"}, {"type": "<type 'instancemethod'>", "name": "<type 'frozenset'>", "value": "<bound method OfflineTbTest.assertSetEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>"}, {"type": "<type 'instancemethod'>", "name": "<type 'list'>", "value": "<bound method OfflineTbTest.assertListEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>"}, {"type": "<type 'instancemethod'>", "name": "<type 'set'>", "value": "<bound method OfflineTbTest.assertSetEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>"}, {"type": "<type 'instancemethod'>", "name": "<type 'tuple'>", "value": "<bound method OfflineTbTest.assertTupleEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>"}, {"type": "<type 'instancemethod'>", "name": "<type 'unicode'>", "value": "<bound method OfflineTbTest.assertMultiLineEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>"}], "type": "<type 'dict'>", "name": "_type_equality_funcs", "value": "{<type 'dict'>: <bound method OfflineTbTest.assertDictEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>, <type 'tuple'>: <bound method OfflineTbTest.assertTupleEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>, <type 'unicode'>: <bound method OfflineTbTest.assertMultiLineEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>, <type 'frozenset'>: <bound method OfflineTbTest.assertSetEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>, <type 'set'>: <bound method OfflineTbTest.assertSetEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>, <type 'list'>: <bound method OfflineTbTest.assertListEqual of <test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>>}"}, {"type": "<type 'bool'>", "name": "longMessage", "value": "False"}, {"type": "<type 'int'>", "name": "maxDiff", "value": "640"}], "type": "<class 'test__offline_tb.OfflineTbTest'>", "name": "self", "value": "<test__offline_tb.OfflineTbTest testMethod=test__ungettable_attributes>"}], "lines_after": ["        with open(os.path.join(os.path.dirname(__file__), \"..\", \"rendering\", \"example_offline_tb.js\"), \"w\") as json_file:\n", "            json_file.write(\"var example_offline_tb = \")\n", "            json_file.write(JSONEncoder().encode(self.offlinetb))\n", "            json_file.write(\";\")\n", "        validate_schema(self.offlinetb)\n"], "line": "            self.offlinetb = distill(var_depth=4)\n", "filename": "/Users/rotemy/workspace/src/work/offlinetb/tests/test__offline_tb.py"}, {"function": "f", "lines_before": ["    unicode_variable = u\"hello\"\n", "    boolean = True\n", "    oldstyle_obj = OldStyleObj(value=OLDSTYLE_OBJ_VALUE)\n", "    f_linebefore_1\n", "    f_linebefore_2\n"], "lineno": 232, "vars": [{"type": "<type 'bool'>", "name": "boolean", "value": "True"}, {"type": "<type 'int'>", "name": "f_linebefore_1", "value": "0"}, {"type": "<type 'int'>", "name": "f_linebefore_2", "value": "0"}, {"type": "<type 'int'>", "name": "f_value1", "value": "0"}, {"vars": [{"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}], "type": "<class 'test__offline_tb.Object'>", "name": "_subobj1", "value": "this is the object repr"}, {"type": "<type 'int'>", "name": "_value", "value": "1"}, {"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"vars": [{"vars": null, "type": "<class 'test__offline_tb.Object'>", "name": "deeply", "value": "this is the object repr"}, {"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": null, "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}], "type": "<class 'test__offline_tb.Object'>", "name": "very", "value": "this is the object repr"}], "type": "<class 'test__offline_tb.Object'>", "name": "nested", "value": "this is the object repr"}, {"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}], "type": "<class 'test__offline_tb.Object'>", "name": "obj", "value": "this is the object repr"}, {"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"type": "<type 'int'>", "name": "value", "value": "2"}], "type": "<type 'instance'>", "name": "oldstyle_obj", "value": "this is the object repr"}, {"type": "<type 'unicode'>", "name": "unicode_variable", "value": "u'hello'"}], "lines_after": ["    f_lineafter_1\n", "    f_lineafter_2\n", "\n", "def g():\n", "    some_type = SomeException\n"], "line": "    g()\n", "filename": "/Users/rotemy/workspace/src/work/offlinetb/tests/test__offline_tb.py"}, {"function": "g", "lines_before": ["    some_type = SomeException\n", "    some_list = [Object(value=i) for i in range(NUM_ITEMS_IN_LIST)]\n", "    g_linebefore_1 = g_linebefore_2 = 0\n", "    g_linebefore_1\n", "    g_linebefore_2\n"], "lineno": 242, "vars": [{"type": "<type 'int'>", "name": "g_linebefore_1", "value": "0"}, {"type": "<type 'int'>", "name": "g_linebefore_2", "value": "0"}, {"type": "<type 'int'>", "name": "i", "value": "4"}, {"vars": [{"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"type": "<type 'int'>", "name": "value", "value": "0"}], "type": "<class 'test__offline_tb.Object'>", "name": "0", "value": "this is the object repr"}, {"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"type": "<type 'int'>", "name": "value", "value": "1"}], "type": "<class 'test__offline_tb.Object'>", "name": "1", "value": "this is the object repr"}, {"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"type": "<type 'int'>", "name": "value", "value": "2"}], "type": "<class 'test__offline_tb.Object'>", "name": "2", "value": "this is the object repr"}, {"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"type": "<type 'int'>", "name": "value", "value": "3"}], "type": "<class 'test__offline_tb.Object'>", "name": "3", "value": "this is the object repr"}, {"vars": [{"type": "<type 'int'>", "name": "regular_property", "value": "3"}, {"vars": [], "type": "[ERROR]", "name": "ungettable_property", "value": "[ERROR]"}, {"type": "<type 'int'>", "name": "value", "value": "4"}], "type": "<class 'test__offline_tb.Object'>", "name": "4", "value": "this is the object repr"}], "type": "<type 'list'>", "name": "some_list", "value": "[this is the object repr, this is the object repr, this is the object repr, this is the object repr, this is the object repr]"}, {"type": "<type 'type'>", "name": "some_type", "value": "<class 'test__offline_tb.SomeException'>"}], "lines_after": ["    g_lineafter_1\n", "    g_lineafter_2\n", "\n", "class SomeException(Exception):\n", "    pass\n"], "line": "    raise SomeException(\"exception_string\")\n", "filename": "/Users/rotemy/workspace/src/work/offlinetb/tests/test__offline_tb.py"}]};